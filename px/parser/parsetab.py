# type: ignore
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = "3.10"

_lr_method = "LALR"

_lr_signature = "DELIMITER EQUAL FLOAT INT LPAREN LSQUARE NEWLINE QUOTE RPAREN RSQUARE SEMI STRING\n    px : px NEWLINE key EQUAL values\n       | key EQUAL values\n    \n    key : STRING\n        | STRING LSQUARE STRING RSQUARE\n        | STRING LSQUARE STRING RSQUARE LPAREN STRING RPAREN\n    \n    values : values DELIMITER value SEMI\n           | value SEMI\n    \n    value : STRING\n          | FLOAT\n          | INT\n          | QUOTE STRING QUOTE\n          | QUOTE FLOAT QUOTE\n          | QUOTE INT QUOTE\n    "

_lr_action_items = {
    "STRING": (
        [
            0,
            4,
            5,
            6,
            13,
            15,
            16,
            27,
        ],
        [
            3,
            3,
            10,
            14,
            18,
            10,
            10,
            29,
        ],
    ),
    "$end": (
        [
            1,
            8,
            17,
            22,
            28,
        ],
        [
            0,
            -2,
            -7,
            -1,
            -6,
        ],
    ),
    "NEWLINE": (
        [
            1,
            8,
            17,
            22,
            28,
        ],
        [
            4,
            -2,
            -7,
            -1,
            -6,
        ],
    ),
    "EQUAL": (
        [
            2,
            3,
            7,
            21,
            30,
        ],
        [
            5,
            -3,
            15,
            -4,
            -5,
        ],
    ),
    "LSQUARE": (
        [
            3,
        ],
        [
            6,
        ],
    ),
    "FLOAT": (
        [
            5,
            13,
            15,
            16,
        ],
        [
            11,
            19,
            11,
            11,
        ],
    ),
    "INT": (
        [
            5,
            13,
            15,
            16,
        ],
        [
            12,
            20,
            12,
            12,
        ],
    ),
    "QUOTE": (
        [
            5,
            15,
            16,
            18,
            19,
            20,
        ],
        [
            13,
            13,
            13,
            24,
            25,
            26,
        ],
    ),
    "DELIMITER": (
        [
            8,
            17,
            22,
            28,
        ],
        [
            16,
            -7,
            16,
            -6,
        ],
    ),
    "SEMI": (
        [
            9,
            10,
            11,
            12,
            23,
            24,
            25,
            26,
        ],
        [
            17,
            -8,
            -9,
            -10,
            28,
            -11,
            -12,
            -13,
        ],
    ),
    "RSQUARE": (
        [
            14,
        ],
        [
            21,
        ],
    ),
    "LPAREN": (
        [
            21,
        ],
        [
            27,
        ],
    ),
    "RPAREN": (
        [
            29,
        ],
        [
            30,
        ],
    ),
}

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_action:
            _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    "px": (
        [
            0,
        ],
        [
            1,
        ],
    ),
    "key": (
        [
            0,
            4,
        ],
        [
            2,
            7,
        ],
    ),
    "values": (
        [
            5,
            15,
        ],
        [
            8,
            22,
        ],
    ),
    "value": (
        [
            5,
            15,
            16,
        ],
        [
            9,
            9,
            23,
        ],
    ),
}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto:
            _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> px", "S'", 1, None, None, None),
    ("px -> px NEWLINE key EQUAL values", "px", 5, "p_px", "parser.py", 31),
    ("px -> key EQUAL values", "px", 3, "p_px", "parser.py", 32),
    ("key -> STRING", "key", 1, "p_key", "parser.py", 39),
    ("key -> STRING LSQUARE STRING RSQUARE", "key", 4, "p_key", "parser.py", 40),
    (
        "key -> STRING LSQUARE STRING RSQUARE LPAREN STRING RPAREN",
        "key",
        7,
        "p_key",
        "parser.py",
        41,
    ),
    ("values -> values DELIMITER value SEMI", "values", 4, "p_values", "parser.py", 59),
    ("values -> value SEMI", "values", 2, "p_values", "parser.py", 60),
    ("value -> STRING", "value", 1, "p_value", "parser.py", 71),
    ("value -> FLOAT", "value", 1, "p_value", "parser.py", 72),
    ("value -> INT", "value", 1, "p_value", "parser.py", 73),
    ("value -> QUOTE STRING QUOTE", "value", 3, "p_value", "parser.py", 74),
    ("value -> QUOTE FLOAT QUOTE", "value", 3, "p_value", "parser.py", 75),
    ("value -> QUOTE INT QUOTE", "value", 3, "p_value", "parser.py", 76),
]
